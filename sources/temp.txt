a := 1;                         // Implicit integer.
b : int = 1;                    // Explicit integer.

c := 1.0;                       // Implicit real.
d : real = 1.0;                 // Explicit real.

e := "Hello there!";            // String constant.
f : string = "Hello";           // Explicit string.


print "\nPrinting";

print "a =", a;                 // Printing string constants and variables.
print "b =", b;

print "c =", c, "| d =", d;     // Multiple printing.
print "e =", e, "| f =", f;

print e + f;                    // Printing expressions, string concatenation.


print "\nMath operations";

g : int = 2 pow 8 + sqrt 16;    // Math operations.
print g;

print 5 + 5 * 2;                // Math operation precedence.


print "\nNested blocks";
a0 := 0;                        // Nested blocks will look above for declaration
{
    a1 := 1;
    print a0, a1;
    {
        a2 := 2;
        print a0, a1, a2;
        {
            a3 := 3;
            print a0, a1, a2, a3;
        }
    }
    // print a3;                // NameError!
}

                                // Prefix and postfix increment/decrement.
print ++1;
print 1++--++--++++++;



x := 5;
y := 8;

if x < y then { print "x is less than y"; }         // Comparison.
if x > y then print "x is greater than y";

if x == y then { print "x is greater than y"; }     // Else-clause.
else { print "x is not greater than y"; }

if x < 2      then print "x is less than 2";        // if - else if - else clause
else if x < 3 then print "x is less than 3";
else if x < 4 then print "x is less than 4";
else if x < 5 then print "x is less than 5";
else if x < 6 then print "x is less than 6";
else if x < 7 then print "x is less than 7";
else print "x is not less than 7";


if 1 == 1 then {                                    // Nested if clauses.
    if 2 == 2 then {
        inner := 5;
    }
}
// print inner;                                     // NameError.


print "\nCalling functions:";
test := {
    z := 4;
    y := 5;
    print z + y;
};
print "\nCalling test";
call test;
call test;

test2 : (z := 1) = {
    y := 5;
    print z + y;
};
print "\nCalling test2";
call test2;
call test2(z = 10);

test3 : (z : int, y : real) = {
    z = 1;
    y = 4.0;
    print z + y;
    print y + z;
};
print "\nCalling test3";
call test3;

test4 : (z : int, y : real) = {
    print z;
    print y;
};
print "\nCalling test4";
call test4(y = 10.23, z = 10);
// call test4(y = 10, z = 10);  TypeError: INTEGER is not compatible with REAL

p := 3;

print "\nTesting expressive condition.";

if p >= 2 then print "Expression 1.2";
if p is >= 2 then print "Expression 1.3";
if p >= than 2 then print "Expression 1.4";
if p greater or equal 2 then print "Expression 1.6";
if p is greater or equal 2 then print "Expression 1.7";
if p greater or equal than 2 then print "Expression 1.8";
if p is greater or equal to 2 then print "Expression 1.9";
if p is equal or greater than 2 then print "Expression 1.10";

print "\nTesting 'not' keyword.";
if p is not less than 2 then print "Expression 2.1";
if p is not greater or equal to 10 then print "Expression 2.2";
if p is not greater or less than 3 then print "Expression 2.3";
if p is not less or greater than 3 then print "Expression 2.4";

print "\nTesting chained condition.";
if p is equal to 4 or p is equal to 3 then print "Expression 4.1";
if p is less than 4 and p is greater than 2 then print "Expression 4.2";
if p is not equal to 5 and p is less than 10 and p is equal to 3 then print "Expression 4.3";

print "\nTesting chained subject condition.";
if p is equal to 3 and less than 5 then print "Yes!";
if p is not 5 and not 10 then print "Yes!";
if p is not 5 and not 3 then print "No!";
if p is not 5 or not 100 then print "Yes!";

print "\nTesting while loop.";
while p is less than 10 and not greater than 5 then {
    p = p + 1;
    print "p =", p;
}


